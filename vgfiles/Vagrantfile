# -*- mode: ruby -*-
# vi: set ft=ruby :

# Box
Vagrant.configure("2") do |config|
  config.vm.define "jenkins" do |jenkins|
    jenkins.vm.box = "ubuntu/bionic64"
    jenkins.vm.hostname = 'jenkins'

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Network
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
    jenkins.vm.network "private_network", ip: "192.168.33.10"
  # config.vm.network "public_network"

  # Shared folder
  # config.vm.synced_folder "../data", "/vagrant_data"
  #
  # Provider
    jenkins.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
       vb.memory = "1024"
    end
  #
  # Provision
    jenkins.vm.provision "shell", inline: <<-SHELL
      apt-get update
      curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io.key | tee \
    /usr/share/keyrings/jenkins-keyring.asc > /dev/null
      echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
    https://pkg.jenkins.io/debian-stable binary/ | tee \
    /etc/apt/sources.list.d/jenkins.list > /dev/null
      apt-get update
      apt-get install fontconfig openjdk-11-jre
      apt-get install jenkins
      systemctl start jenkins
    SHELL
  end

  config.vm.define "docker" do |docker|
    docker.vm.box = "ubuntu/bionic64"
    docker.vm.hostname = 'docker'
    docker.vm.provider "virtualbox" do |vb|

    docker.vm.network "private_network", ip: "192.168.33.20"

    docker.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install \
        ca-certificates \
        curl \
        gnupg \
        lsb-release
      mkdir -p /etc/apt/keyrings
      echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      chmod a+r /etc/apt/keyrings/docker.gpg
      apt-get update
      apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
      systemctl start docker
      docker run hello-world
    SHELL
    end
  end
end